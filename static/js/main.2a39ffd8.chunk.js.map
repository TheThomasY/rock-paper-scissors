{"version":3,"sources":["assets/images/logo.svg","components/ScoreCard.js","assets/images/icon-paper.svg","assets/images/icon-scissors.svg","assets/images/icon-rock.svg","components/pieces/CreateAnIcon.js","components/GameBoard.js","components/BattleBoard.js","assets/images/image-rules.svg","assets/images/icon-close.svg","components/Rules.js","App.js","reportWebVitals.js","index.js"],"names":["ScoreCard","props","className","src","logo","alt","score","PaperIcon","iconOuterColour","iconType","onClick","gameState","onPlayerPick","paperIcon","scissorsIcon","rockIcon","GameBoard","PlayedBoard","useState","gameResult","setGameResult","playerPick","picks","player","housePick","house","thisBeatsThat","rock","scissors","paper","useEffect","onHousePick","onPlayAgain","Rules","showRules","toggleRulesHandler","onToggleRules","rulesImg","rulesCloseIcon","App","setGameState","setPicks","setScore","setShowRules","pickOptions","prevPicks","Math","floor","random","onPlayerWin","prevScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a39ffd8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a4a2b39f.svg\";","import './SCSS/ScoreCard.css';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nexport default function ScoreCard(props) {\r\n  return (\r\n    <div>\r\n      <div className='title-card'>\r\n        <img\r\n          className='header-logo'\r\n          src={logo}\r\n          alt='Rock paper scissors logo'\r\n        />\r\n        <div className='score-tile'>\r\n          <div className='score-tile-title'>SCORE</div>\r\n          <div className='score-tile-data'>{props.score}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-paper.8b57a6b1.svg\";","export default __webpack_public_path__ + \"static/media/icon-scissors.3b1a5d7e.svg\";","export default __webpack_public_path__ + \"static/media/icon-rock.476e90a9.svg\";","import paperIcon from '../../assets/images/icon-paper.svg';\r\nimport scissorsIcon from '../../assets/images/icon-scissors.svg';\r\nimport rockIcon from '../../assets/images/icon-rock.svg';\r\n\r\nimport '../SCSS/pieces/CreateAnIcon.css';\r\n\r\nexport default function PaperIcon(props) {\r\n  let iconOuterColour = 'gb-piece-bg gb-bg-' + props.iconType;\r\n\r\n  const iconClickHandler = () => {\r\n    if (props.gameState === 'player-pick') {\r\n      props.onPlayerPick(props.iconType);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={iconOuterColour} onClick={iconClickHandler}>\r\n      <div className='gb-piece'></div>\r\n      {props.iconType === 'paper' && (\r\n        <img className='gb-piece-icon' src={paperIcon} alt='Icon for paper' />\r\n      )}\r\n      {props.iconType === 'scissors' && (\r\n        <img\r\n          className='gb-piece-icon'\r\n          src={scissorsIcon}\r\n          alt='Icon for scissors'\r\n        />\r\n      )}\r\n      {props.iconType === 'rock' && (\r\n        <img className='gb-piece-icon' src={rockIcon} alt='Icon for rock' />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import './SCSS/GameBoard.css';\r\n\r\nimport CreateAnIcon from './pieces/CreateAnIcon';\r\n\r\nexport default function GameBoard(props) {\r\n  return (\r\n    <div className='game-board'>\r\n      <div className='gb-top'>\r\n        <CreateAnIcon\r\n          iconType={'paper'}\r\n          onPlayerPick={props.onPlayerPick}\r\n          gameState={props.gameState}\r\n        />\r\n        <CreateAnIcon\r\n          iconType={'scissors'}\r\n          onPlayerPick={props.onPlayerPick}\r\n          gameState={props.gameState}\r\n        />\r\n      </div>\r\n      <div className='gb-bottom'>\r\n        <CreateAnIcon\r\n          iconType={'rock'}\r\n          onPlayerPick={props.onPlayerPick}\r\n          gameState={props.gameState}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport './SCSS/BattleBoard.css';\r\n\r\nimport CreateAnIcon from '../components/pieces/CreateAnIcon';\r\n\r\nexport default function PlayedBoard(props) {\r\n  const [gameResult, setGameResult] = useState('');\r\n\r\n  let playerPick = props.picks.player;\r\n  let housePick = props.picks.house;\r\n\r\n  const thisBeatsThat = {\r\n    rock: 'scissors',\r\n    scissors: 'paper',\r\n    paper: 'rock',\r\n  };\r\n\r\n  useEffect(() => {\r\n    // On component mount, make house pick\r\n    props.onHousePick();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (thisBeatsThat[playerPick] === housePick) {\r\n      setGameResult('win');\r\n    } else if (thisBeatsThat[housePick] === playerPick) {\r\n      setGameResult('lose');\r\n    } else if (housePick !== '') {\r\n      setGameResult('draw');\r\n    }\r\n  }, [playerPick, housePick]);\r\n\r\n  const playAgainHandler = () => {\r\n    props.onPlayAgain(gameResult);\r\n  };\r\n\r\n  return (\r\n    <div className='battle-board-and-result'>\r\n      <div className='battle-board'>\r\n        <div className='bb-picked bb-you-picked'>\r\n          <CreateAnIcon iconType={playerPick} gameState={props.gameState} />\r\n          <div className='picked-by-label'>You Picked</div>\r\n        </div>\r\n        <div className='result-div'>\r\n          <div className='result'>YOU {gameResult}</div>\r\n          <div onClick={playAgainHandler} className='play-again-btn'>\r\n            PLAY AGAIN\r\n          </div>\r\n        </div>\r\n        <div className='bb-picked bb-house-picked'>\r\n          <div className='bb-empty'></div>\r\n          <CreateAnIcon iconType={housePick} gameState={props.gameState} />\r\n          <div className='picked-by-label'>The House Picked</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/image-rules.258b753f.svg\";","export default __webpack_public_path__ + \"static/media/icon-close.bde602ec.svg\";","import React from 'react';\r\nimport './SCSS/Rules.css';\r\nimport rulesImg from '../assets/images/image-rules.svg';\r\nimport rulesCloseIcon from '../assets/images/icon-close.svg';\r\n\r\nexport default function Rules(props) {\r\n  let showRules = props.showRules;\r\n\r\n  const toggleRulesHandler = () => {\r\n    props.onToggleRules();\r\n  };\r\n\r\n  return (\r\n    <div className='rules-component'>\r\n      <div onClick={toggleRulesHandler} className='rules-btn'>\r\n        RULES\r\n      </div>\r\n      {showRules && (\r\n        <div className='rules-full-page'>\r\n          <div className='rules-fp-title'>RULES</div>\r\n          <img\r\n            className='rules-fp-img'\r\n            src={rulesImg}\r\n            alt='Rules of rock paper scissors'\r\n          />\r\n          <img\r\n            onClick={toggleRulesHandler}\r\n            className='rules-fp-close'\r\n            src={rulesCloseIcon}\r\n            alt='Close rules button'\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport ScoreCard from './components/ScoreCard';\r\nimport GameBoard from './components/GameBoard';\r\nimport BattleBoard from './components/BattleBoard';\r\nimport Rules from './components/Rules';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('player-pick');\r\n  const [picks, setPicks] = useState({\r\n    player: '',\r\n    house: '',\r\n  });\r\n  const [score, setScore] = useState(0);\r\n  const [showRules, setShowRules] = useState(false);\r\n\r\n  const pickOptions = ['rock', 'paper', 'scissors'];\r\n\r\n  const startBattle = (playerPick) => {\r\n    setPicks((prevPicks) => {\r\n      return { ...prevPicks, player: playerPick };\r\n    });\r\n    setGameState('battle');\r\n  };\r\n\r\n  const houseToPick = () => {\r\n    let housePick = pickOptions[Math.floor(Math.random() * 3)];\r\n    setPicks((prevPicks) => {\r\n      return { ...prevPicks, house: housePick };\r\n    });\r\n  };\r\n\r\n  const scoreIncrease = () => {\r\n    setScore((prevScore) => {\r\n      return prevScore++;\r\n    });\r\n  };\r\n\r\n  const playAgain = (gameResult) => {\r\n    if (gameResult === 'win') {\r\n      setScore((prevScore) => {\r\n        return prevScore + 1;\r\n      });\r\n    }\r\n    setGameState('player-pick');\r\n    setPicks({\r\n      player: '',\r\n      house: '',\r\n    });\r\n  };\r\n\r\n  const toggleRules = () => {\r\n    showRules ? setShowRules(false) : setShowRules(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <ScoreCard score={score} />\r\n      {gameState === 'player-pick' && (\r\n        <GameBoard onPlayerPick={startBattle} gameState={gameState} />\r\n      )}\r\n      {gameState === 'battle' && (\r\n        <BattleBoard\r\n          picks={picks}\r\n          gameState={gameState}\r\n          onHousePick={houseToPick}\r\n          onPlayerWin={scoreIncrease}\r\n          onPlayAgain={playAgain}\r\n        />\r\n      )}\r\n      <Rules onToggleRules={toggleRules} showRules={showRules} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}